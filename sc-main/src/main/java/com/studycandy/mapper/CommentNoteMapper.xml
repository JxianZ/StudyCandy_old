<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.studycandy.mapper.CommentNoteMapper">
    <resultMap id="BaseResultMap" type="com.studycandy.model.CommentNote">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="note_id" property="noteId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="comment_content" property="commentContent" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="like_num" property="likeNum" jdbcType="INTEGER"/>
        <result column="today_num" property="todayNum" jdbcType="INTEGER"/>
        <result column="unlike_num" property="unlikeNum" jdbcType="INTEGER"/>
        <result column="follow_id" property="followId" jdbcType="INTEGER"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from s_comment_note
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.studycandy.model.CommentNote">
        insert into s_comment_note (id, note_id, user_id,
        comment_content, gmt_create, gmt_modified,
        like_num, today_num, unlike_num,
        follow_id)
        values (#{id,jdbcType=INTEGER}, #{noteId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
        #{commentContent,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP},
        #{likeNum,jdbcType=INTEGER}, #{todayNum,jdbcType=INTEGER}, #{unlikeNum,jdbcType=INTEGER},
        #{followId,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.studycandy.model.CommentNote">
        update s_comment_note
        set note_id = #{noteId,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER},
        comment_content = #{commentContent,jdbcType=VARCHAR},
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
        like_num = #{likeNum,jdbcType=INTEGER},
        today_num = #{todayNum,jdbcType=INTEGER},
        unlike_num = #{unlikeNum,jdbcType=INTEGER},
        follow_id = #{followId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select id, note_id, user_id, comment_content, gmt_create, gmt_modified, like_num,
        today_num, unlike_num, follow_id
        from s_comment_note
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, note_id, user_id, comment_content, gmt_create, gmt_modified, like_num,
    today_num, unlike_num, follow_id
    from s_comment_note
    </select>
    <select id="selectByNoteId" resultMap="BaseResultMap">
        select id, note_id, user_id, comment_content, gmt_create, gmt_modified, like_num,
        today_num, unlike_num, follow_id
        from s_comment_note
        where note_id = #{noteId,jdbcType=INTEGER}
    </select>
    <select id="selectByUserId" resultMap="BaseResultMap">
        select id, note_id, user_id, comment_content, gmt_create, gmt_modified, like_num,
        today_num, unlike_num, follow_id
        from s_comment_note
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
</mapper>