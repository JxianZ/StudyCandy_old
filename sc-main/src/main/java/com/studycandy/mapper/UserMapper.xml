<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.studycandy.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.studycandy.model.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_username" property="userUsername" jdbcType="VARCHAR"/>
        <result column="user_password" property="userPassword" jdbcType="VARCHAR"/>
        <result column="user_nickname" property="userNickname" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="user_phone" property="userPhone" jdbcType="VARCHAR"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from s_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.studycandy.model.User">
        insert into s_user (user_phone, id, user_username, user_password,
        user_nickname, user_email
        )
        values (#{userPhone,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, #{userUsername,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
        #{userNickname,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.studycandy.model.User">
        update s_user
        set user_username = #{userUsername,jdbcType=VARCHAR},
        user_password = #{userPassword,jdbcType=VARCHAR},
        user_nickname = #{userNickname,jdbcType=VARCHAR},
        user_email = #{userEmail,jdbcType=VARCHAR},
        user_phone = #{userPhone,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select id, user_username, user_password, user_nickname, user_email, user_phone
        from s_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, user_username, user_password, user_nickname, user_email, user_phone
        from s_user
    </select>
    <select id="find" resultMap="BaseResultMap">
        SELECT id, user_username, user_password, user_nickname, user_email, user_phone
        from s_user WHERE TRUE
        <if test="username!=null">AND username LIKE #{username}</if>
        <if test="email!=null">AND email LIKE #{email}</if>
        <if test="phone!=null">AND phone LIKE #{phone}</if>
    </select>
</mapper>